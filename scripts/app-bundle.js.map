{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","/Users/andrewpage/Documents/Git/learning-aurelia/src/app.html","mult-choice.css"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["declare var $;\n\nclass Choice {\n  constructor(public id: number, public choiceText:string) { }\n}\n\nexport class App {\n  prompt:string = 'Please select a choice:';\n  correctChoice:number = 0;\n  selectedChoice:Choice = null;\n  feedbackText:string = '';\n  choices:Array<Choice> = [\n    new Choice(0, 'The first choice (correct)'),\n    new Choice(1, 'The second choice'),\n    new Choice(2, 'The third choice')\n  ];\n\n  get correct():boolean {\n    return this.selectedChoice.id === this.correctChoice;\n  }\n\n  submit() {\n    this.clearFeedback();\n    if (this.correct) {\n      this.feedbackText = 'That is the correct answer';\n      $('.feedback-popup p').addClass('correct');\n    } else {\n      this.feedbackText = 'That was not the correct answer.';\n      $('.feedback-popup p').addClass('incorrect');\n    }\n    $('.feedback-popup').show();\n  }\n\n  clear() {\n    this.clearFeedback();\n    this.selectedChoice = null;\n  }\n\n  clearFeedback() {\n    $('.feedback-popup').hide();\n    $('.feedback-popup p').removeClass('correct incorrect');\n    this.feedbackText = '';\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,"html, body {\n\twidth: 100%;\n\theight: 100%;\n}\n\np {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.mult-choice {\n\tmargin: 0 auto;\n\tfloat: none;\n}\n\n.choice {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.mult-choice label {\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.choice-label {\n\tpadding-left: 10px;\n}\n\n.feedback-popup {\n  display: none;\n  font-weight: bold;\n  padding: 10px 20px;\n  background-color: #eee;\n  margin-top: 20px;\n}\n\n.correct {\n  color: green;\n}\n\n.incorrect {\n  color: red;\n}"],"sourceRoot":"../src"}